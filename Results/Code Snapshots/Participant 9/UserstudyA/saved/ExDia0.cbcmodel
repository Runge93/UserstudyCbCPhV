<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="FirstExercise">
    <statement name="statement">
      <refinement xsi:type="cbcmodel:SmallRepetitionStatement" name="repetitionStatement">
        <postCondition name="\forall int q; ((q >= 0 &amp; q &lt; a.length) -> a[i]>=a[q])"/>
        <preCondition name="a.length >0"/>
        <loopStatement name="loop">
          <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement">
            <guards name="a[j] > a[i]"/>
            <guards name="guard2"/>
            <commands name="statement1">
              <refinement name="i = j;">
                <postCondition name="j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j"/>
                <preCondition name="((j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j) &amp; (\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q]))) &amp; (a[j] > a[i])"/>
              </refinement>
              <postCondition name="j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j"/>
              <preCondition name="((j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j) &amp; (\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q]))) &amp; (a[j] > a[i])"/>
            </commands>
            <commands name="statement2">
              <refinement xsi:type="cbcmodel:SkipStatement" name=";">
                <postCondition name="j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j"/>
                <preCondition name="((j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j) &amp; (\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q]))) &amp; (guard2)"/>
              </refinement>
              <postCondition name="j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j"/>
              <preCondition name="((j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j) &amp; (\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q]))) &amp; (guard2)"/>
            </commands>
          </refinement>
          <postCondition name="j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j"/>
          <preCondition name="(j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j) &amp; (\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q]))"/>
        </loopStatement>
        <variant name="a.length - j"/>
        <invariant name="j &lt; a.length&#xA;&amp; j >= 0 &amp;&#xA;i &lt;= j"/>
        <guard name="\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q])"/>
      </refinement>
      <postCondition name="\forall int q; ((q >= 0 &amp; q &lt; a.length) -> a[i]>=a[q])"/>
      <preCondition name="a.length >0"/>
    </statement>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="int[] a"/>
    <variables name="int i"/>
    <variables name="int j"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions>
    <conditions name="a != null"/>
    <conditions name="a.length > 0"/>
  </cbcmodel:GlobalConditions>
</xmi:XMI>
