<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="FirstExercise">
    <statement name="statement">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement">
        <firstStatement name="statement1">
          <refinement name="j=a.length;i=a.length;">
            <postCondition name="i=a.length"/>
            <preCondition name="a.length >0"/>
          </refinement>
          <postCondition name="i=a.length"/>
          <preCondition name="a.length >0"/>
        </firstStatement>
        <secondStatement name="statement2">
          <refinement xsi:type="cbcmodel:SmallRepetitionStatement" name="repetitionStatement">
            <postCondition name="\forall int q; ((q >= 0 &amp; q &lt; a.length) -> a[i]>=a[q])"/>
            <preCondition name="i=a.length"/>
            <loopStatement name="loop">
              <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement">
                <firstStatement name="statement1">
                  <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement">
                    <guards name="a[i]&lt;a[j]"/>
                    <guards name="a[j]&lt;=a[i]"/>
                    <commands name="statement1">
                      <refinement name="i=j;">
                        <postCondition name="j&lt;i"/>
                        <preCondition name="((j>=0) &amp; (j= 0)) &amp; (a[i]&lt;a[j])"/>
                      </refinement>
                      <postCondition name="j&lt;i"/>
                      <preCondition name="((j>=0) &amp; (j= 0)) &amp; (a[i]&lt;a[j])"/>
                    </commands>
                    <commands name="statement2">
                      <refinement name="i=i;">
                        <postCondition name="j&lt;i"/>
                        <preCondition name="((j>=0) &amp; (j= 0)) &amp; (a[j]&lt;=a[i])"/>
                      </refinement>
                      <postCondition name="j&lt;i"/>
                      <preCondition name="((j>=0) &amp; (j= 0)) &amp; (a[j]&lt;=a[i])"/>
                    </commands>
                  </refinement>
                  <postCondition name="j&lt;i"/>
                  <preCondition name="(j>=0) &amp; (j= 0)"/>
                </firstStatement>
                <secondStatement name="statement2">
                  <refinement name="j--;">
                    <postCondition name="j>=0"/>
                    <preCondition name="j&lt;i"/>
                  </refinement>
                  <postCondition name="j>=0"/>
                  <preCondition name="j&lt;i"/>
                </secondStatement>
                <intermediateCondition name="j&lt;i"/>
              </refinement>
              <postCondition name="j>=0"/>
              <preCondition name="(j>=0) &amp; (j= 0)"/>
            </loopStatement>
            <variant name="j-1"/>
            <invariant name="j>=0"/>
            <guard name="j= 0"/>
          </refinement>
          <postCondition name="\forall int q; ((q >= 0 &amp; q &lt; a.length) -> a[i]>=a[q])"/>
          <preCondition name="i=a.length"/>
        </secondStatement>
        <intermediateCondition name="i=a.length"/>
      </refinement>
      <postCondition name="\forall int q; ((q >= 0 &amp; q &lt; a.length) -> a[i]>=a[q])"/>
      <preCondition name="a.length >0"/>
    </statement>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="int[] a"/>
    <variables name="int i"/>
    <variables name="int j"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions>
    <conditions name="a != null"/>
    <conditions name="a.length > 0"/>
  </cbcmodel:GlobalConditions>
</xmi:XMI>
