<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="FirstExercise">
    <statement name="statement">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement">
        <firstStatement name="statement1">
          <refinement name="i = 0; j = 0;" proven="true">
            <postCondition name="i = 0 &amp; j = 0"/>
            <preCondition name="a.length >0"/>
          </refinement>
          <postCondition name="i = 0 &amp; j = 0"/>
          <preCondition name="a.length >0"/>
        </firstStatement>
        <secondStatement name="statement2">
          <refinement xsi:type="cbcmodel:SmallRepetitionStatement" name="repetitionStatement">
            <postCondition name="\forall int q; ((q >= 0 &amp; q &lt; a.length) -> a[i]>=a[q])"/>
            <preCondition name="i = 0 &amp; j = 0"/>
            <loopStatement name="loop">
              <refinement name="if(a[j] >= a[i]){i = j;}; j++;">
                <postCondition name="{\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q] )}"/>
                <preCondition name="({\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q] )}) &amp; (j &lt; a.length)"/>
              </refinement>
              <postCondition name="{\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q] )}"/>
              <preCondition name="({\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q] )}) &amp; (j &lt; a.length)"/>
            </loopStatement>
            <variant name="j = a.length -1"/>
            <invariant name="{\forall int q; ((q >= 0 &amp; q &lt; j) -> a[i] >= a[q] )}"/>
            <guard name="j &lt; a.length"/>
          </refinement>
          <postCondition name="\forall int q; ((q >= 0 &amp; q &lt; a.length) -> a[i]>=a[q])"/>
          <preCondition name="i = 0 &amp; j = 0"/>
        </secondStatement>
        <intermediateCondition name="i = 0 &amp; j = 0"/>
      </refinement>
      <postCondition name="\forall int q; ((q >= 0 &amp; q &lt; a.length) -> a[i]>=a[q])"/>
      <preCondition name="a.length >0"/>
    </statement>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="int[] a"/>
    <variables name="int i"/>
    <variables name="int j"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions>
    <conditions name="a != null"/>
    <conditions name="a.length > 0"/>
  </cbcmodel:GlobalConditions>
</xmi:XMI>
